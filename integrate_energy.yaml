connString: dbname=sensor
tasks:
  - name: "integratation of solar energy"
    stateGet: SELECT cursor FROM cursor WHERE source='solar_joule'
    stateSet: INSERT INTO cursor VALUES ('solar_joule', ?) ON CONFLICT (source) DO UPDATE SET cursor=excluded.cursor
    initialGet: SELECT EXTRACT(EPOCH FROM ts) FROM aurinko ORDER BY ts LIMIT 1
    select: SELECT id, EXTRACT(EPOCH FROM ts), solar_power FROM aurinko WHERE ts>to_timestamp(?) ORDER BY ts
    insert: INSERT INTO cumulative (id, value, source) VALUES (?, ?, 'aurinko')
  - name: "integration of battery energy"
    stateGet: SELECT cursor FROM cursor WHERE source='battery_joule'
    stateSet: INSERT INTO cursor VALUES ('battery_joule', ?) ON CONFLICT (source) DO UPDATE SET cursor=excluded.cursor
    initialGet: SELECT EXTRACT(EPOCH FROM ts) FROM akku ORDER BY ts LIMIT 1
    select: SELECT id, EXTRACT(EPOCH FROM ts), current*voltage FROM akku WHERE ts>to_timestamp(?) ORDER BY ts
    insert: INSERT INTO cumulative (id, value, source) VALUES (?, ?, 'akku')
  - name: "integration of PSU energy"
    stateGet: SELECT cursor FROM cursor WHERE source='psu_joule'
    stateSet: INSERT INTO cursor VALUES ('psu_joule', ?) ON CONFLICT (source) DO UPDATE SET cursor=excluded.cursor
    initialGet: SELECT EXTRACT(EPOCH FROM ts) FROM akku ORDER BY ts LIMIT 1
    select: SELECT id, EXTRACT(EPOCH FROM ts), GREATEST(0, psu_current*voltage) FROM akku WHERE ts>to_timestamp(?) ORDER BY ts
    insert: INSERT INTO cumulative (id, value, source) VALUES (?, ?, 'psu')
